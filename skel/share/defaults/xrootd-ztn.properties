#  -----------------------------------------------------------------------
#     Default values for xrootd ZTN plugin
#  -----------------------------------------------------------------------
@DEFAULTS_HEADER@

# ----- Standard implementation of the authentication handler for the ZTN protocol
#
xrootd.plugin!ztn.authn-handler.class=org.dcache.xrootd.plugins.authn.BearerTokenZTNAuthnHandler

# ----- Maximum length of the bearer token; anything larger than this the door will reject
#
xrootd.plugin!ztn.max-token-len-in-bytes=4096

# ----- An optional comma separated list of alternate token locations
#       that the client should consider when doing token discovery,
#       as directed by the flags.
#
xrootd.plugin!ztn.alt-token-locs=

# ----- Optional flags.   These are structured as an OR'd unsigned 16-bit int (short):
#
#                       rr rr rr rr rr rr xx vv
#
#       Where
#
#       rr are reserved bits set to zero
#       xx are flag bits set either to zero or one
#       vv is an unsigned one byte version number of the protocol being used by the server
#
#       The currently defined values:
#
#       0x0000000000000100     useFirst    =   Apply toklocs first.
#       0x0000000000000200     useLast     =   Apply toklocs last.
#       0x0000000000000300     useOnly     =   Apply toklocs and only toklocs.
#       0x0000000000000800     srvRTOK     =   Allowed to ask for a new token.
#
#       The useFirst and useLast bits indicate how the supplied toklocs,
#       if any, are to be applied. Normally, the client uses the standard
#       token discovery mechanism to find an applicable token to return to
#       the server. The toklocs may be used by the server to augment that
#       mechanism. When useFirst is set, the client should search as directed
#       by toklocs prior to using the standard mechanism should the token not
#       be found using the toklocs. When useLast is set, the client should
#       use the toklocs if the standard mechanism failed to discover a usable
#       token. Should useFirst and useLast be set (i.e. useOnly), then only
#       the toklocs should be used to discover the token.
#
#       The srvRTOK bit indicates that the server allows the client to obtain
#       a token from an issuer in real time if the client cannot find a usable
#       token. While the bit is defined, it is not currently supported until
#       the token discovery mechanism defines specifies the way to obtain
#       real-time tokens for background clients.
#
xrootd.plugin!ztn.token-flags=